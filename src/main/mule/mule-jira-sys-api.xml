<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd ">
    <http:listener-config name="mule-jira-sys-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="mule-jira-sys-api-config" api="resource::ed3c5dd3-9278-4c7f-a720-dc8d3558b543:mule-jira-sys-api:1.0.4:raml:zip:mule-jira-sys-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="mule-jira-sys-api-main">
        <http:listener config-ref="mule-jira-sys-api-httpListenerConfig" path="/api/v1/mule-jira-sys-api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="mule-jira-sys-api-config" />
    </flow>
    <flow name="mule-jira-sys-api-console">
        <http:listener config-ref="mule-jira-sys-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="mule-jira-sys-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\issue\(id):mule-jira-sys-api-config">
        <ee:transform>
            <ee:variables>
                <ee:set-variable variableName="id">attributes.uriParams.'id'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  expand: "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
  id: "10002",
  self: "http://www.example.com/jira/rest/api/2/issue/10002",
  key: "EX-1",
  names: {
    watcher: "watcher",
    attachment: "attachment",
    "sub-tasks": "sub-tasks",
    description: "description",
    project: "project",
    comment: "comment",
    issuelinks: "issuelinks",
    worklog: "worklog",
    updated: "updated",
    timetracking: "timetracking"
  },
  schema: {},
  fields: {
    watcher: {
      self: "http://www.example.com/jira/rest/api/2/issue/EX-1/watchers",
      isWatching: false,
      watchCount: 1,
      watchers: [
        {
          self: "http://www.example.com/jira/rest/api/2/user?username=fred",
          name: "fred",
          displayName: "Fred F. User",
          active: false
        }
      ]
    },
    attachment: [
      {
        id: 10001,
        self: "http://www.example.com/jira/rest/api/2.0/attachments/10000",
        filename: "picture.jpg",
        author: {
          self: "http://www.example.com/jira/rest/api/2/user?username=fred",
          key: "fred",
          accountId: "99:27935d01-92a7-4687-8272-a9b8d3b2ae2e",
          name: "fred",
          avatarUrls: {
            "48x48": "http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred",
            "24x24": "http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred",
            "16x16": "http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred",
            "32x32": "http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred"
          },
          displayName: "Fred F. User",
          active: false
        },
        created: "2017-05-18T15:36:56.535+0000",
        size: 23123,
        mimeType: "image/jpeg",
        content: "http://www.example.com/jira/attachments/10000",
        thumbnail: "http://www.example.com/jira/secure/thumbnail/10000"
      }
    ],
    "sub-tasks": [
      {
        id: "10000",
        "type": {
          id: "10000",
          name: "",
          inward: "Parent",
          outward: "Sub-task"
        },
        outwardIssue: {
          id: "10003",
          key: "EX-2",
          self: "http://www.example.com/jira/rest/api/2/issue/EX-2",
          fields: {
            status: {
              iconUrl: "http://www.example.com/jira//images/icons/statuses/open.png",
              name: "Open"
            }
          }
        }
      }
    ],
    description: "example bug report",
    project: {
      self: "http://www.example.com/jira/rest/api/2/project/EX",
      id: "10000",
      key: "EX",
      name: "Example",
      avatarUrls: {
        "48x48": "http://www.example.com/jira/secure/projectavatar?size=large&pid=10000",
        "24x24": "http://www.example.com/jira/secure/projectavatar?size=small&pid=10000",
        "16x16": "http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10000",
        "32x32": "http://www.example.com/jira/secure/projectavatar?size=medium&pid=10000"
      },
      projectCategory: {
        self: "http://www.example.com/jira/rest/api/2/projectCategory/10000",
        id: "10000",
        name: "FIRST",
        description: "First Project Category"
      }
    },
    comment: [
      {
        self: "http://www.example.com/jira/rest/api/2/issue/10010/comment/10000",
        id: "10000",
        author: {
          self: "http://www.example.com/jira/rest/api/2/user?username=fred",
          name: "fred",
          displayName: "Fred F. User",
          active: false
        },
        body: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.",
        updateAuthor: {
          self: "http://www.example.com/jira/rest/api/2/user?username=fred",
          name: "fred",
          displayName: "Fred F. User",
          active: false
        },
        created: "2017-05-18T15:36:55.432+0000",
        updated: "2017-05-18T15:36:55.432+0000",
        visibility: {
          "type": "role",
          value: "Administrators"
        }
      }
    ],
    issuelinks: [
      {
        id: "10001",
        "type": {
          id: "10000",
          name: "Dependent",
          inward: "depends on",
          outward: "is depended by"
        },
        outwardIssue: {
          id: "10004L",
          key: "PRJ-2",
          self: "http://www.example.com/jira/rest/api/2/issue/PRJ-2",
          fields: {
            status: {
              iconUrl: "http://www.example.com/jira//images/icons/statuses/open.png",
              name: "Open"
            }
          }
        }
      }, 
      {
        id: "10002",
        "type": {
          id: "10000",
          name: "Dependent",
          inward: "depends on",
          outward: "is depended by"
        },
        inwardIssue: {
          id: "10004",
          key: "PRJ-3",
          self: "http://www.example.com/jira/rest/api/2/issue/PRJ-3",
          fields: {
            status: {
              iconUrl: "http://www.example.com/jira//images/icons/statuses/open.png",
              name: "Open"
            }
          }
        }
      }
    ],
    worklog: [
      {
        self: "http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000",
        author: {
          self: "http://www.example.com/jira/rest/api/2/user?username=fred",
          name: "fred",
          displayName: "Fred F. User",
          active: false
        },
        updateAuthor: {
          self: "http://www.example.com/jira/rest/api/2/user?username=fred",
          name: "fred",
          displayName: "Fred F. User",
          active: false
        },
        comment: "I did some work here.",
        updated: "2017-05-18T15:36:56.584+0000",
        visibility: {
          "type": "group",
          value: "jira-developers"
        },
        started: "2017-05-18T15:36:56.584+0000",
        timeSpent: "3h 20m",
        timeSpentSeconds: 12000,
        id: "100028",
        issueId: "10002"
      }
    ],
    updated: 1,
    timetracking: {
      originalEstimate: "10m",
      remainingEstimate: "3m",
      timeSpent: "6m",
      originalEstimateSeconds: 600,
      remainingEstimateSeconds: 200,
      timeSpentSeconds: 400
    }
  }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\issues:application\json:mule-jira-sys-api-config">
        <flow-ref doc:name="issues" doc:id="175d05ea-8d2e-4572-bee6-7cabef637987" name="issues" />
    </flow>
</mule>
